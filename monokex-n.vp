// Verifpal 0.19.3
// Monokex, "N" pattern

attacker[active]

principal I[
    knows public pid, zero
    knows private p1
]

principal R[
    knows public pid, zero
    generates R
    RS = G^R
]

R -> I: [RS]

principal I[
    generates E
    IE = G^E

    H0 = HASH(pid)
    H1 = HKDF(H0, RS, nil)
    H2 = HKDF(H1, H1, nil)           // without prelude
    H3 = HKDF(H2, IE, nil)
    H4 = HKDF(H3, RS^E, nil)
    H5, K1 = HKDF(H4, zero, nil)
    S1 = ENC(K1, p1)
    H6, T1 = HKDF(H5 , S1, nil)
]

I -> R: IE, S1, T1

principal R[
    _H0 = HASH(pid)
    _H1 = HKDF(_H0, RS, nil)
    _H2 = HKDF(_H1, _H1, nil)           // without prelude
    _H3 = HKDF(_H2, IE, nil)
    _H4 = HKDF(_H3, IE^R, nil)
    _H5, _K1 = HKDF(_H4, zero, nil)
    _H6, _T1 = HKDF(_H5 , S1, nil)
    _ = ASSERT(_T1, T1)?
]

queries[
    confidentiality? R
    confidentiality? E
    confidentiality? H6
]
